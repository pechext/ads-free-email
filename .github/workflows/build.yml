name: build
run-name: ${{ github.actor }} has pushed new production code
on: 
  push:
    branches: 
      - 'release/**'

jobs:
  run-basic-workflow: 
    uses: pechext/ads-free-gmail/.github/workflows/basic.yml@main

  build_and_upload:
    needs: run-basic-workflow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '16'
          cache: 'npm'

      - name: cache npm dependencies
        id: cache-npm
        uses: actions/cache@v3
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
        name: install dependencies
        run: npm ci

      - name: extract info
        id: extract_info
        run: |
          branch=`git symbolic-ref --short HEAD | tr / _`
          commit=`git rev-parse --short HEAD`
          version=`cat ./manifests/manifest-chrome.json | jq .version | sed 's/"//g'`
          echo "branch=$branch" >> $GITHUB_OUTPUT
          echo "commit=$commit" >> $GITHUB_OUTPUT
          echo "version=$version" >> $GITHUB_OUTPUT  
          echo "Current branch is $branch"
          echo "Current commit is $commit"
          echo "Current version is $version"

      - name: build staging chrome
        run: npm run prepare:staging

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: staging-${{steps.extract_info.outputs.branch}}-${{steps.extract_info.outputs.commit}}
          path: dist/**/*staging*.zip
          retention-days: 1

      - name: clean
        run: npm run clean

      - name: build production chrome
        run: npm run prepare:production

      - name: upload
        uses: actions/upload-artifact@v3
        with:
          name: production-${{steps.extract_info.outputs.branch}}-${{steps.extract_info.outputs.commit}}
          path: dist/**/*production*.zip
          retention-days: 1